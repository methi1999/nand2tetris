// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    // Mux16(a=false, b=in, sel=load, out=outload);

    // Inc16(in=curout, out=curoutinc);

    // Mux16(a=false, b=curoutinc, sel=inc, out=outinc);

    // Or16(a=outload, b=outinc, out=final);

    Or(a=load, b=inc, out=oo);
    Or(a=oo, b=reset, out=choose);

    // Register(in=final, load=choose, out=out, out=curout);
    // Register(in=false, load=reset, out=out1);

    // Mux16(a=out1, b=in, sel=load, out=out2, out=out3);

    // Inc16(in=out2, out=incout);

    // Mux16(a=out3, b=incout, sel=inc, out=out);
    Inc16(in=o2, out=inced);
    Mux16(a=o1, b=inced, sel=inc, out=p2);
    Mux16(a=p2, b=in, sel=load, out=p1);    
    Mux16(a=p1, b=false, sel=reset, out=f);

    Register(in=f, load=choose, out=out, out = o1, out=o2);

}